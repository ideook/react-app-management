const fs = require("fs");
const express = require("express");
const bodyParser = require("body-parser");
const app = express();
const port = process.env.PORT || 5000;
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.listen(port, () => console.log(`Listening on port ${port}`));

const data = fs.readFileSync("./database.json");
const conf = JSON.parse(data);
const sql = require("mssql");

console.log(data);

const config = {
  server: conf.host,
  port: conf.port,
  database: conf.database,
  user: conf.user,
  password: conf.password,
  stream: true,
};

sql.connect(config, function (err) {
  if (err) {
    return console.error("error : ", err);
  }
  console.log("MSSQL 연결 완료");
});

app.get("/api/customers", (req, res) => {
  var request = new sql.Request();
  request.stream = true;

  q = "SELECT * FROM CUSTOMER";
  request.query(q, (err, rows, fields) => {
    res.send(rows);
  });
});




--------------------------------



const https = require("https");
const fs = require("fs");
const express = require("express");
const bodyParser = require("body-parser");
const app = express();
const port = process.env.PORT || 443;
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

const data = fs.readFileSync("./database.json");
const conf = JSON.parse(data);
const sql = require("mssql");

const options = {
  key: fs.readFileSync("./cert/localhost.key"),
  cert: fs.readFileSync("./cert/localhost.crt"),
  requestCert: false,
  rejectUnauthorized: false,
};

const server = https.createServer(options, app);

server.listen(port, function () {
  console.log("Express server listening on port " + server.address().port);
});

//app.listen(port, () => console.log(`Listening on port ${port}`));

const config = {
  server: conf.host,
  port: conf.port,
  database: conf.database,
  user: conf.user,
  password: conf.password,
  stream: true,
};

sql.connect(config, function (err) {
  if (err) {
    return console.error("error : ", err);
  }
  console.log("MSSQL 연결 완료");
});

app.get("/api/customers", (req, res) => {
  var request = new sql.Request();
  request.stream = true;

  q = "SELECT * FROM CUSTOMER";
  request.query(q, (err, rows, fields) => {
    res.send(rows);
  });
});



----------------------------



const express = require("express");
const http = require("http");
const https = require("https");
const fs = require("fs");
const HTTP_PORT = 80;
const HTTPS_PORT = 443;
const options = {
  key: fs.readFileSync("./cert/localhost.key"),
  cert: fs.readFileSync("./cert/localhost.crt"),
};
const app = express();

const data = fs.readFileSync("./database.json");
const conf = JSON.parse(data);
const sql = require("mssql");

console.log(data);

const config = {
  server: conf.host,
  port: conf.port,
  database: conf.database,
  user: conf.user,
  password: conf.password,
  stream: true,
};

sql.connect(config, function (err) {
  if (err) {
    return console.error("error : ", err);
  }
  console.log("MSSQL 연결 완료");
});

app.get("/api/customers", (req, res) => {
  var request = new sql.Request();
  request.stream = true;

  q = "SELECT * FROM CUSTOMER";
  request.query(q, (err, rows, fields) => {
    res.send(rows);
  });
});

app.get("/", (req, res) => {
  res.json({
    message: `Server is running on port ${req.secure ? HTTPS_PORT : HTTP_PORT}`,
  });
});

// Create an HTTP server.
http.createServer(app).listen(HTTP_PORT);

// Create an HTTPS server.
https.createServer(options, app).listen(HTTPS_PORT);
